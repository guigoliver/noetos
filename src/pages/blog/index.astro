---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const allPosts = (await getCollection('blog')).sort(
	(a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
);

// Get the latest post
const latestPost = allPosts[0];
// Get remaining posts
const olderPosts = allPosts.slice(1);

// Get all unique categories
const categories = [...new Set(allPosts.flatMap(post => [post.data.category].filter(Boolean)))];

// Get current category from URL
const url = new URL(Astro.request.url);
const currentCategory = url.searchParams.get('category') || 'all';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			:root {
				--spacing: 1.5rem;
				--border-radius: 12px;
				--transition: all 0.3s ease;
			}

			main {
				max-width: 1200px;
				margin: 0 auto;
				padding: 0 var(--spacing);
			}

			/* Category Filter */
			.category-filter {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				margin-bottom: 2rem;
			}

			.category-btn {
				background: none;
				border: 1px solid rgb(var(--gray-light));
				border-radius: 20px;
				padding: 0.5rem 1rem;
				cursor: pointer;
				transition: var(--transition);
				font-size: 0.9rem;
			}

			.category-btn:hover,
			.category-btn.active {
				background-color: rgb(var(--accent));
				color: white;
				border-color: rgb(var(--accent));
			}

			/* Featured Post */
			.featured-post {
				margin-bottom: 3rem;
				overflow: hidden;
				border-radius: var(--border-radius);
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
				transition: var(--transition);
			}

			.featured-post:hover {
				transform: translateY(-5px);
				box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
			}

			.featured-link {
				text-decoration: none;
				display: block;
			}

			.featured-image {
				width: 100%;
				height: 400px;
				object-fit: cover;
			}

			.featured-content {
				padding: 2rem;
				background: white;
			}

			.featured-title {
				font-size: 2.2rem;
				margin: 1rem 0;
				color: rgb(var(--black));
			}

			.featured-excerpt {
				color: rgb(var(--gray));
				font-size: 1.1rem;
				line-height: 1.6;
				margin-bottom: 1rem;
			}

			.featured-date {
				color: rgb(var(--gray));
				font-size: 0.9rem;
			}

			/* Posts Grid */
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
				gap: 2rem;
				margin-top: 2rem;
			}

			.post-card {
				background: white;
				border-radius: var(--border-radius);
				overflow: hidden;
				transition: var(--transition);
				box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
			}

			.post-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
			}

			.post-link {
				text-decoration: none;
				display: block;
				height: 100%;
			}

			.post-image {
				width: 100%;
				height: 200px;
				object-fit: cover;
			}

			.post-content {
				padding: 1.5rem;
			}

			.post-title {
				font-size: 1.3rem;
				margin: 0.5rem 0;
				color: rgb(var(--black));
			}

			.post-excerpt {
				color: rgb(var(--gray));
				font-size: 0.95rem;
				line-height: 1.5;
				margin-bottom: 1rem;
			}

			.post-date {
				color: rgb(var(--gray));
				font-size: 0.85rem;
			}

			/* Category Tags */
			.categories {
				display: flex;
				gap: 0.5rem;
				margin-bottom: 0.5rem;
			}

			.category-tag {
				display: inline-block;
				background: rgba(var(--accent), 0.1);
				color: rgb(var(--accent));
				border-radius: 4px;
				padding: 0.25rem 0.5rem;
				font-size: 0.75rem;
				font-weight: 500;
			}

			/* Responsive */
			@media (max-width: 768px) {
				.featured-title {
					font-size: 1.75rem;
				}

				.featured-image {
					height: 300px;
				}

				.posts-grid {
					grid-template-columns: 1fr;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				{/* Category Filter */}
				<div class="category-filter">
					<a href="?category=all" class={`category-btn ${currentCategory === 'all' ? 'active' : ''}`}>
						Todos
					</a>
					{categories.map(category => (
						<a 
							href={`?category=${encodeURIComponent(category)}`} 
							class={`category-btn ${currentCategory === category ? 'active' : ''}`}
						>
							{category}
						</a>
					))}
				</div>

				{/* Featured Post */}
				{latestPost && (
					<div class="featured-post">
						<a href={`/blog/${latestPost.slug}/`} class="featured-link">
							<img 
								src={latestPost.data.heroImage} 
								alt={latestPost.data.title}
								class="featured-image"
							/>
							<div class="featured-content">
								{latestPost.data.category && (
									<div class="categories">
										<span class="category-tag">{latestPost.data.category}</span>
									</div>
								)}
								<h2 class="featured-title">{latestPost.data.title}</h2>
								<p class="featured-excerpt">{latestPost.data.description}</p>
								<p class="featured-date">
									<FormattedDate date={latestPost.data.pubDate} />
								</p>
							</div>
						</a>
					</div>
				)}

				{/* Posts Grid */}
				<div class="posts-grid">
					{olderPosts
						.filter(post => 
							currentCategory === 'all' || 
							post.data.category === currentCategory
						)
						.map((post) => (
							<article class="post-card">
								<a href={`/blog/${post.slug}/`} class="post-link">
									<img 
										src={post.data.heroImage} 
										alt={post.data.title}
										class="post-image"
									/>
									<div class="post-content">
										{post.data.category && (
											<div class="categories">
												<span class="category-tag">{post.data.category}</span>
											</div>
										)}
										<h3 class="post-title">{post.data.title}</h3>
										<p class="post-excerpt">{post.data.description}</p>
										<p class="post-date">
											<FormattedDate date={post.data.pubDate} />
										</p>
									</div>
								</a>
							</article>
						))
					}
				</div>
			</section>
		</main>
		<Footer />
	</body>
</html>
