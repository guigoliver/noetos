---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE } from '../../consts';
import FormattedDate from '../../components/FormattedDate.astro';
import '../../styles/global.css';

export async function getStaticPaths() {
  const courses = await getCollection('courses');
  
  return courses.map(course => ({
    params: { slug: course.slug },
    props: { course },
  }));
}

const { course } = Astro.props;
const { Content } = await course.render();
---

<BaseLayout title={`${course.data.title} | ${SITE_TITLE}`} description={course.data.description}>
  <article class="max-w-6xl mx-auto px-4 py-12">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Course Details - Left Side -->
      <div class="lg:col-span-2">
        <div class="max-w-3xl">
          {course.data.heroImage && (
            <div class="mb-8 rounded-lg overflow-hidden">
              <img 
                src={course.data.heroImage} 
                alt={course.data.title}
                class="w-full h-auto object-cover"
              />
            </div>
          )}
          
          <header class="mb-8">
            <h1 class="text-4xl font-bold text-earth-900 mb-4">{course.data.title}</h1>
            <p class="text-xl text-earth-700">{course.data.description}</p>
          </header>
          
          <div class="prose prose-lg max-w-none prose-headings:text-earth-900 prose-p:text-earth-800 prose-a:text-olive-700 hover:prose-a:text-olive-600 prose-blockquote:border-l-sage-500 prose-blockquote:text-earth-700 prose-blockquote:bg-sage-50 prose-blockquote:py-1 prose-blockquote:px-4 prose-img:rounded-lg">
            <Content />
          </div>
        </div>
      </div>
      
      <!-- Course Info Sidebar - Right Side -->
      <div class="lg:col-span-1">
        <div class="sticky top-24 card p-6">
          {course.data.isEnrollmentOpen ? (
            <div class="mb-6 flex flex-col">
              {course.data.price ? (
                <div class="mb-4">
                  <span class="block text-sm text-earth-600 mb-1">Course Fee</span>
                  <span class="text-2xl font-bold text-earth-900">{course.data.price}</span>
                </div>
              ) : (
                <div class="mb-4">
                  <span class="inline-block px-3 py-1 text-sm font-medium rounded-full bg-sage-100 text-sage-700">Free Course</span>
                </div>
              )}
              <button class="btn-primary mb-3 w-full">Enroll Now</button>
              <button class="btn-secondary w-full">Download Syllabus</button>
            </div>
          ) : (
            <div class="mb-6 bg-earth-50 rounded p-4 text-center">
              <span class="text-earth-800 font-medium block mb-2">Coming Soon</span>
              <p class="text-earth-600 text-sm">This course isn't open for enrollment yet.</p>
              <button class="mt-3 btn-secondary w-full">Join Waitlist</button>
            </div>
          )}
          
          <div class="space-y-4">
            <div>
              <h3 class="text-lg font-semibold text-earth-900 mb-2">Course Details</h3>
              <div class="space-y-3">
                {course.data.level && (
                  <div class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-olive-600 mt-0.5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
                    </svg>
                    <div>
                      <span class="block text-sm text-earth-600">Level</span>
                      <span class="text-earth-800">{course.data.level.charAt(0).toUpperCase() + course.data.level.slice(1)}</span>
                    </div>
                  </div>
                )}
                
                {course.data.duration && (
                  <div class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-olive-600 mt-0.5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <div>
                      <span class="block text-sm text-earth-600">Duration</span>
                      <span class="text-earth-800">{course.data.duration}</span>
                    </div>
                  </div>
                )}
                
                <div class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-olive-600 mt-0.5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  <div>
                    <span class="block text-sm text-earth-600">Last Updated</span>
                    <span class="text-earth-800">
                      <FormattedDate date={course.data.updatedDate || course.data.pubDate} />
                    </span>
                  </div>
                </div>
              </div>
            </div>
            
            {course.data.syllabus && course.data.syllabus.length > 0 && (
              <div>
                <h3 class="text-lg font-semibold text-earth-900 mb-3">Course Syllabus</h3>
                <ul class="space-y-2">
                  {course.data.syllabus.map((item, index) => (
                    <li class="border-b border-earth-100 pb-2">
                      <div class="flex items-start">
                        <span class="h-6 w-6 rounded-full bg-olive-100 text-olive-700 text-sm flex items-center justify-center mr-3 flex-shrink-0">
                          {index + 1}
                        </span>
                        <div>
                          <span class="block text-earth-800 font-medium">{item.title}</span>
                          {item.description && (
                            <span class="block text-sm text-earth-600 mt-1">{item.description}</span>
                          )}
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>
